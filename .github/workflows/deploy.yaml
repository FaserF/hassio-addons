# yamllint disable rule:line-length
# inspired from https://github.com/Poeschl/Hassio-Addons
---
name: Builder

env:
  BUILD_ARGS: "--test"

on:
  push:
    branches:
      - master
    paths:
      - "**/config.*"
  workflow_call:
  workflow_dispatch:

jobs:
  correct_path_filters:
    if: github.repository_owner == 'FaserF'
    runs-on: ubuntu-latest
    steps:
      - name: ↩️ Checkout
        uses: actions/checkout@v4
      - name: Fetch latest changes
        run: |
          git config pull.rebase false
          git pull origin master || true
      - name: Update path_filters
        run: |
          # Init
          echo "Starting"

          # Go through all folders, add to filters if not existing
          for f in $( find -- * -maxdepth 0 -type d | sort -r ); do
            if [ -f "$f"/config.json ]; then

              # Add to file
              if ! grep "$f:" ".github/paths-filter.yml"; then
                echo "$f: $f/config.*" >> ".github/paths-filter.yml"
              fi

              # Identify addons with true images
              if [ "$(jq '.image' "$f/config.json")" != null ]; then
                sed -i "/$f/ s/ # Image : yes//g" ".github/paths-filter.yml"
                sed -i "/$f/ s/$/ # Image : yes/" ".github/paths-filter.yml"
              fi
            fi
          done

          # Sort yaml
          sort -t= ".github/paths-filter.yml" -o ".github/paths-filter.yml"
      - name: Commit & Push
        uses: actions-js/push@v1.5
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: master
          force: true
          message: "Make scripts executable"

  check-addon-changes:
    runs-on: ubuntu-latest
    needs: [correct_path_filters]
    outputs:
      changedAddons: ${{ steps.get_addons.outputs.addons }}
    steps:
      - name: ↩️ Checkout
        uses: actions/checkout@v4

      - name: 📂 Detect changed files
        id: filter
        if: github.event_name != 'workflow_dispatch'
        uses: dorny/paths-filter@v3
        with:
          filters: .github/paths-filter.yml

      - name: 📝 Determine addons to process
        id: get_addons
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            addons=$(find . -maxdepth 1 -type d -not -path '*/\.*' -exec basename {} \; | jq -R -s -c 'split("\n")[:-1]')
          else
            addons='${{ steps.filter.outputs.changes }}'
          fi
          echo "Detected addons: $addons"
          echo "addons=$addons" >> "$GITHUB_OUTPUT"

  correct-CRLF:
    if: ${{ needs.check-addon-changes.outputs.changedAddons != '[]' }}
    needs: check-addon-changes
    uses: ./.github/workflows/convert-CRLF-to-LF.yaml

  make-executable:
    if: ${{ needs.check-addon-changes.outputs.changedAddons != '[]' }}
    needs: [check-addon-changes, correct-CRLF]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        addon: ${{ fromJSON(needs.check-addon-changes.outputs.changedAddons) }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Fetch latest changes
        run: |
          git config pull.rebase false
          git pull origin master || true
      - name: Make scripts executable
        run: |
          echo "Starting"
          chmod u+x $(find "$path" -type f -iname "*.sh") || true
        env:
          path: "./${{ matrix.addon }}"
      - name: Commit & Push
        uses: actions-js/push@v1.5
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: master
          force: true
          message: "Make scripts executable"

  lint_config:
    if: ${{ needs.check-addon-changes.outputs.changedAddons != '[]' }}
    needs: check-addon-changes
    runs-on: ubuntu-latest
    strategy:
      matrix:
        addon: ${{ fromJSON(needs.check-addon-changes.outputs.changedAddons) }}
    steps:
      - name: ↩️ Checkout
        uses: actions/checkout@v4
      - name: 🔎 Run Home Assistant Add-on Lint
        uses: frenck/action-addon-linter@v2
        with:
          path: "./${{ matrix.addon }}"

  build:
    if: ${{ needs.check-addon-changes.outputs.changedAddons != '[]' }}
    needs: [check-addon-changes, make-executable, correct-CRLF]
    runs-on: ubuntu-latest
    environment: CR_PAT
    name: Build ${{ matrix.arch }} ${{ matrix.addon }} add-on
    strategy:
      fail-fast: false
      matrix:
        addon: ${{ fromJSON(needs.check-addon-changes.outputs.changedAddons) }}
        arch: ["aarch64", "amd64", "armv7", "armhf", "i386"]

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Resolve Symlinks
        run: |
          # Find all symlinks and replace them with the real files or directories
          find . -type l | while read -r link; do
            target="$(readlink -f "$link")"
            # Remove the symlink
            rm "$link"
            if [ -d "$target" ]; then
              cp -R "$target" "$link"
            else
              cp "$target" "$link"
            fi
          done

      - name: Get information
        id: info
        uses: home-assistant/actions/helpers/info@master
        with:
          path: "./${{ matrix.addon }}"

      - name: Check if add-on should be built
        id: check
        env:
          HEAD: "${{ github.head_ref }}"
        run: |
          # shellcheck disable=SC2157,SC2086
          if [[ "${{ steps.info.outputs.architectures }}" =~ ${{ matrix.arch }} ]]; then
             # shellcheck disable=SC2129
             echo "build_arch=true" >> $GITHUB_OUTPUT;
             # shellcheck disable=SC2129
             echo "image=$(echo ${{ steps.info.outputs.image }} | cut -d'/' -f3)" >> $GITHUB_OUTPUT;
             if [[ -z "$HEAD" ]] && [[ "${{ github.event_name }}" == "push" ]]; then
                 # shellcheck disable=SC2129
                 echo "BUILD_ARGS=" >> $GITHUB_ENV;
             fi
           else
             echo "${{ matrix.arch }} is not a valid arch for ${{ matrix.addon }}, skipping build";
             # shellcheck disable=SC2129
             echo "build_arch=false" >> $GITHUB_OUTPUT;
          fi

#      - name: Use action to check for mixed line endings (CRLF and LF)
#        uses: ymwymw/check-mixed-line-endings@v2

      - name: Login to GitHub Container Registry
        if: env.BUILD_ARGS != '--test'
        uses: docker/login-action@v3.3.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Delete old container packages
        uses: smartsquaregmbh/delete-old-packages@v0.8.1
        with:
          user: FaserF
          type: container
          keep: 0
          names: |
            apache2-amd64
            apache2-aarch64
            openssl-amd64
            netboot-xyz-amd64
            null
            matterbridge-amd64
            pterodactyl-wings-amd64
            apache2-minimal-armv7
            pterodactyl-wings-aarch64
            openssl-armv7
            apache2-minimal-armhf
            apache2-minimal-i386
            bash_script_executer-armhf
            bash_script_executer-armv7
            bash_script_executer-i386
            openssl-i386
            apache2-minimal-mariadb-i386
            apache2-minimal-mariadb-armhf
            apache2-minimal-mariadb-amd64
            apache2-minimal-mariadb-armv7
            apache2-minimal-mariadb-aarch64
            bash_script_executer-amd64
            apache2-armhf
            openssl-armhf
            apache2-armv7
            apache2-i386
            switch_lan_play-amd64
            netboot-xyz-aarch64
            switch_lan_play-i386
            matterbridge-armv7
            matterbridge-armv7
            switch_lan_play-armv7
            matterbridge-aarch64
            matterbridge-armhf
            bash_script_executer-aarch64
            switch_lan_play-armhf
            tado_aa-amd64
            tado_aa-i386
            tado_aa-armv7
            tado_aa-armhf
            apache2-minimal-aarch64
            openssl-aarch64
            tado_aa-aarch64

      - name: Build ${{ matrix.addon }} add-on
        id: builderstep
        if: steps.check.outputs.build_arch == 'true'
        uses: home-assistant/builder@2025.02.0
        env:
          CAS_API_KEY: ${{ secrets.CAS_API_KEY }}
        with:
          args: |
            ${{ env.BUILD_ARGS }} \
            --${{ matrix.arch }} \
            --target /data/${{ matrix.addon }} \
            --image "${{ steps.check.outputs.image }}" \
            --docker-hub "ghcr.io/${{ github.repository_owner }}" \
            --addon